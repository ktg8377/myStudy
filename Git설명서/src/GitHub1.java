
public class GitHub1 {
/*
	@GitHub
	
	Git을 사용할 때 소스코드를 올려놓는 서버가 필요한데,
	이 서버를 제공해 주는 서비스
	
	
	@git이란?
	- 리눅스 토발즈가 리눅스 개발에 이용하기 위해 처음 개발한 소스코드 관리 시스템
	
	버전관리 시스템에서의 특징
	- 빠른 속도
	- 단순한 구조?
	- 완벽한 분산
	- 대형 프로젝트에서 유용성
	- 거의 모든 명령을 로컬에서 실행
	
	
	@Git의 데이터 상태 관리
	- Modified: 수정한 파일을 아직 로컬 데이터에 적용하지 않은 상태
	- Staged: 현재 수정한 파일을 곧 적용할 것이라고 표시한 상태
	- Committed: 로컬 데이터에 안전하게 저장 완료된 상태
	
	@Git의 기본 용어
	1) repository
	- 저장소, 소스코드의 모든 내용을 저장
	- 각 소스코드의 변경 사항을 관리
	2) Working Tree
	- 원격저장소에 있는 모든 소스코드와 변경 정보를 복사한 내 컴퓨터의 작업 디렉토리의
	현재 상태
	3) Directory
	- 원격저장소에 저장된 소스코드와 그 변경사항을 관리하기 위해
	내 컴퓨터에 변경점에 대한 정보만을 따로 관리
	4) Branch
	- 소프트웨어 개발에서 다양한 버전이나 특정 기능들을 따로 구현해야 할 때에
	기본 개발 부분을 건드리지 않고 분기
	5) Merge
	- branch를 생성해서 작업하던 내용이 Master Branch에 통합되어
	반영되어야 할 때 기능 수행
	- 합치기 기능
	
	
	
	@git과 github의 차이점
	git은 개인 컴퓨터에서 돌아가는 version control system이다
	git을 사용하기 위해서는 개인 계정을 등록할 필요도 없으며
	인터넷을 연결할 필요도 없다
	
	github는 github라 불리는 회사에서 서비스하고 있는 서버에 올라간 git이기 때문에
	사용하기 위해 개인 계정을 등록해야 하며,
	인터넷에 연결되어 있어야 한다
	
	즉, github는 git 소프트웨어를 지원하는 일종의 클라우드 서비스이다
	
	git에서 제공하지 않는 기능도 추가적으로 제공해주고 있다
	ex: UI 제공
	
	
	
	@깃허브 기능
	- 소스코드 관리
	- 프로젝트 설명서
	- 커뮤니티
	
	@소스코드 관리 서버
	- git시스템을 가숑하여 발생되는 소스코드의 변경 정보와 모든 소스코드 파일을
	저장하기 위한 공간
	- 깃을 사용하는데 있어 개인적으로 서버를 구성하여 프로젝트 관리도 가능
	- 깃허브 이용 비용
		오픈소스 프로젝트: 무료
		상용 private 프로젝트: 유료
	- 소스코드 관리서버 기능
		개인적으로 서버 구현을 하는 번거로움을 깃허브에 프로젝트만 생성하면
		누구나 쉽게 git의 중앙 서버로 사용할 수 있음
	- 각 개발자들의 소스코드의 상태를 관리&저장해 주는 저장소 역할을 해주고 있음
	
	@깃허브의 커뮤티니 기능
	- 깃허브 프로젝트 소개 홈페이지로도 활용 가능
	- 깃허브 사이트에서 프로젝트 페이지에 접속 시 현재 소스코드들이 보여짐
		누구나 문서를 볼 수 있도록 제공됨
	- 질문과 답변 가능
	- 이슈를 등록 및 상태 체크
	
	@깃허브 기타 기능
	- 문서작성 기능
		프로젝트 소개 및 사용방법등을 별도의 홈페이지 없이도 보여줄 수 있음
	- 이슈관리 기능
		개발 중에 발생하는 문제에 대한 관리
		이슈를 등록하면 다양한 개발자들간의 토론 가능
	- 개발진행 관리 기능
		개발 진행 관리와 자기 버전에서 개선해야 할 부분 정리에 큰 도움
		지속적인 업데이트가 필요한 서비스의 개념 강화
	- 커뮤니티 기능
		개발자들간의 의견 교류를 할 수 있는 커뮤니티 페이지 제공
		스타트 업이나 오픈소스 프로젝트, 그리고 상용 프로젝트에서도 소스코드 관리뿐
		아니라 개발과 서비스의 연속성을 위해서 활용하는 사례 증가
	- 통계 기능
		이슈에 대해 Graph를 통해 통계 데이터 확인 가능
		시각화를 통해 어떻게 진행되는지 파악이 쉬움
		
		
	
	
	
	
	
			
*/	
}
