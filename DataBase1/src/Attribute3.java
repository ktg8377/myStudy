
public class Attribute3 {

//	@속성의 개념
//	사전적 의미로는 사물의 성질, 특징, 또는 본질적인 성질로정의할 수 있다
//	
//	여기에서는 업무에서 필요로 하는 인스턴스로 관리하고자 하는 의미상
//	더 이상 분리되지 않는 최소의 데이터 단위라고 정의할 수 있다
//	
//	이것(속성)은 엔티티에서 한 분야를 담당하고 있다
//	
//	강사 엔티티
//	
//	속성들
//	이름, 주소, 생년월일, 전문분야 등
//	
//	@속성의 정의
//	-업무에서 필요로 한다
//	-의미상 더 이상 분리되지 않는다
//	-엔티티를 설명하고 인스턴스의 구성요소가 된다
	
//	-한 개의 엔티티는 두 개 이상의 인스턴스의 집합이어야 한다
//	-한 개의 엔티티는 두 개 이상의 속성을 갖는다
//	-한 개의 속성은 한 개의 속성값을 갖는다
//	
//	@속성의 특징
//	-엔티티와 마찬가지로 반드시 해당 업무에서 필요하고
//	관리하고자 하는 정보이어야 한다
//	-하나의 속성에는 한 개의 값만을 가진다
//	하나의 속성에 여러 개의 값이 있는 다중 값일 경우
//	별도의 엔티티를 이용하여 분리한다
//	
//	@속성의 분류
//	-기본속성
//	업무로부터 추출한 모든 속성이 여기에 해당한다
//	가장 일반적이고 많은 속성을 차지한다
//	-설계속성
//	업무상 필요한 데이터 이외에 데이터 모델링을 위해, 업무를 규칙화하기
//	위해 속성을 새로 만들거나 변형하여 정의하는 속성이다
//	ex: 일련변호등
//	-파생속성
//	다른 속성에 영향을 받아 발생하는 속성으로서 보통 계산된 값들이 이에 해당한다
//	유의해야 할 점이 많으며 가급적 이 속성을 적게 정의하는 것이 좋다

//	@도메인(Domain)
//	각 속성은 가질 수 있는 값의 범위가 있는데 이를 그 속성의 도메인이라 한다
//	학생이라는 엔티티가 있을 때 학점이라는 속성의 도메인은 0.0에서 4.5 사이의
//	실수 값이라고 할 수 있다
//	쉽게 정리하면 속성에 대한 데이터 타입과 크기를 지정하는 것이라 할 수 있다
//	
//	@속성의 명명(Naming)
//	-해당 업무에서 사용하는 이름을 부여 한다
//	-서술식 속성명은 사용하지 않는다
//	-약어사용은 가급적 제한한다
//	-전체 데이터모델에서 유일성 확보하는 것이 좋다
	
	
	
}
