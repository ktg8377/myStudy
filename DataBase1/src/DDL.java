
public class DDL {

//	데이터베이스
//	
//	RDBMS(관계형 데이터베이스)
//	
//	SQL(Structured Query Language)
//	관계형 데이터베이스에서 데이터 정의, 데이터 조작, 데이터 제어를 하기 위해
//	사용하는 언어이다
//	보통은 에스큐엘로 읽는다
//	sql문법은 끝에 ;(세미콜론)을 붙여서 문법들을 구분한다
//	
//	Data definition Language
//	데이터베이스 객체들을 생성 또는 변경, 제거할 때 사용한다
//	객체란 테이블, 인덱스, 뷰등 sql문을 수행하는 대상이 된다
//	
//	데이터 정의어라고 부른다(CRUD)
//	Create, alter, drop, rename이 존재한다
//	테이블과 같은 데이터 구조를 정의하는데 사용되는 명령어들로
//	그러한 구조를 생성하거나 변경, 삭제하는 등의 데이터 구조와 관련된
//	명령어들을 DDL이라고 부른다
//	
//	Table(entity)
//	테이블 용어
//	table: 행과 컬럼의 2차원 구조를 가진 데이터의 저장 장소이며
//	데이터베이스의 가장 기본적인 개념
//	컬럼/열(column): 2차원 구조를 가진 테이블에서
//	세로 방향으로 이루어진 하나하나의 특정 속성(더이상 나눌 수 없는 특성)
//	행(row): 2차원 구조를 가진 테이블에서 가로 방향으로
//	이루어진 연결된 데이터
//	
//	데이터 유형
//	character 
//	- 고정 깊이 문자열 정보
//	- 기본 길이 1바이트, 최대 길이 2000바이트
//	- 최대 길이를 갖고 고정 길이를 가지고 있으므로
//	할당된 변수 값의 길이가 s보다 작을 경우에는 그 차이 길이만큼 공간으로 채워진다
//	
//	varchar2
//	- 가변 길이 문자열 정보
//	- 기본 길이 1바이트, 최대 길이 4000바이트
//	- 최대 길이를 갖지만 가변 길이로 조정이 되기 때문에
//	할당된 변수 값의 바이트만 적용된다
//	
//	numeric
//	- 정수, 실수 등 숫자 정보(oracle은 number로 타입이 지정됨)
//	- 처음에 전체 자리 수를 지정하고, 그 다음 소수 부분의 자리 수를 지정한다
//	ex: number(8, 2) 라고 선언하면 정수부분이 6자리 이고 소수점 부분이 2자리이다
//	
//	datetime
//	- 날짜와 시각 정보(oracle은 date)
//	- 1초 단위로 관리
	
	
}
