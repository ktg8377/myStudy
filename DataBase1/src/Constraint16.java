
public class Constraint16 {

//	@제약조건(Constraint)
//	사용자가 원하는 조건의 데이터만 유지하기 위한
//	즉, 데이터의 무결성을 유지하기 위한 데이터베이스의 보편적인 방법으로
//	테이블의 특정 컬럼에 설정하는 제약이다
//	
//	테이블을 생성할 때 제약조건을 반드시 기술할 필요는 없지만
//	이후에 alter을 이용해서 추가, 수정하는 경우
//	데이터가 이미 입력된 경우라면 처리 과정이 쉽지 않으므로
//	초기 테이블 생성 시점부터 적합한 제약 조건에 대한 충분한 검토가 있어야 한다
//	
//	@데이터 무결성 제약 조건이란?
//	테이블에 부적절한 자료가 입력되는 것을 방지하기 위해서
//	테이블을 생성할 때 각 컬럼에 대해서 정의하는 여러 가지 규칙을 말한다
//	
//	@무결한 데이터의 5가지 제약조건
//	구분							설명
//	primary key		테이블에 저장된 행 데이터를 고유하게 식별하기 위한 기본키를 정의한다
//	(기본키)			하나의 테이블에 하나의 기본키 제약만 정의할 수 있다
//					기본키 제약을 정의하면 자동으로 unique 인덱스를 생성하며,
//					기본키를 구성하는 컬럼에는 null을 입력할 수 없다
//					
//	unique key		테이블에 저장된 행 데이터를 고유하게 식별하기 위한 고유키를 정의한다
//	(고유키)			단, null은 고유키 제약의 대상이 아니므로 null값을 가진 행이
//					여러 개가 있더라도 고유키 제약 위반이 되지 않는다
//					
//	not null		null 값의 입력을 금지한다. 디폴트 상태에서는 모든 컬럼에서
//					null을 허가하고 있지만, 이 제약을 지정함으로써 해당 컬럼은
//					입력 필수가 된다
//					
//	check			입력할 수 있는 값의 범위 등을 제한한다. check 제약으로는
//					true or false로 평가할 수 있는 논리식을 지정한다
//					
//	foreign key		관계형 데이터베이스에서 테이블 간의 관계를 정의하기 위해 기본키를
//	(외래키)			다른 테이블의 외래키로 복사하는 경우 외래키가 생성된다
//					외래키 지정시 참조 무결성 제약 옵션을 선택할 수 있다
	
//	default 의미
//	데이터 입력 시에 칼럼의 값이 지정되어 있지 않을 경우 기본값(default)을 사전에
//	설정할 수 있다. 데이터 입력시 명시된 값을 지정하지 않은 경우에 null값이
//	입력되고, default 값을 정의했다면 해당 컬럼에 정의된 기본값이 자동으로
//	입력된다
	
//	@딕셔너리에서 나온 의미
//	CONSTRAINT_TYPE			의미
//	P						PRIMARY KEY
//	R OR F					FOREIGN KEY
//	U						UNIQUE
//	C						CHECK, NOT NULL
	
//	@기본키 VS 유니크 + NOT NULL
//	이들은 서로 다릅니다
//	
//	기본키 = 유니크 + NOT NULL + INDEX;
	
//	컬럼 레벨로 제약 조건명을 명시하여 제약 조건 설정하기
//	형식
//	컬럼명 데이터타입 CONSTRAINT constraint_name constraint_type
//	
//	제약조건 명명규칙
//	테이블명_컬럼명_제약조건유형
	
//	@CHECK와 DEFAULT의 제약조건
	
//	@참조무결성을 위한 FOREIGN KEY 제약조건
//	참조무결성은 테이블 사이의 관계에서 발생하는 개념이다
//	
//	참조의 무결성을 위한 외래키 제약 조건을 설정할 때 중요한 개념은
//	부모 테이블과 자식 테이블이라는 관계이다
//	(부모키, 자식키)
//	
//	주의할 점:
//	부모 키가 되기 위한 컬럼은 반드시 부모 테이블의 기본키가 설정되어 있어야 한다는 것이다
	
//	표현식
//	DEPTNO NUMBER(2) CONSTRAINT EMP09_DEPT09_DEPTNO_FK REFERENCES DEPT09(DEPTNO)
//	컬럼명	데이터타입				제약조건명				   REFERENCES 부모테이블명(부모 기본키 컬럼명)
//	일반적으로 컬럼명과 데이터타입은 부모컬럼과 동일하게 적음

//	제약조건 수정 삭제 간단히 알려주자
//	수정 cr ud
	
	
	
	
}
