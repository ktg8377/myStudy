
public class Relationship {

//	@관계의 개념
//	
//	사전적 의미는 상호 연관성이 있는 상태로 말할 수 있다
//	
//	이것을 데이터 모델에 대입하면
//	엔티티의 인스턴스 사이의 논리적인 연관성으로서 존재의 형태로서나
//	행위로서 서로에게 연관성이 부여된 상태라고 할 수 있다
//	
//	ex: 강사 -- 가르친다 -- 수강생
//	
//	@관계의 표기법
//	- 관계명(membership): 관계의 이름
//	- 관계차수(Cardinality): 1:1, 1:M (1대다), M:N (다대다)
//	- 관계선택사양(Optionality): 필수관계, 선택관계
//	
//	가. 관계명
//		포함한다
//	부서	----------------------	사원
//						소속된다
//	- 애매한 동사를 피한다
//	ex: 관계된다, 관련이 있다, 이럴거 같다등 어떤 행위인지, 두 참여자 간의
//	어떤 상태가 있는지 파악할 수 없다
//	- 현재형으로 표현한다
//	ex: 수강을 신청했다, 강의를 할 것이다 식으로 표현해서는 안된다
//	수강 신청한다, 강의를 한다로 표현해야 한다
//	
//	나. 관계차수
//	1:1 관계 표기법
//	등록한다
//	사원	-|--------------------|-	병역사항
//						작성된다
//						
//	1:M(one to many) 관계 표기법 - 이건 표현 불가능 해서 그냥 손으로 그리자
//	포함한다
//	부서	-|--------------------o|<-	사원
//						소속된다
//	한 명의 사원은 한 부서에 소속되고 한 부서에는 여러 사원을 포함한다					
//	
//	M:N(many to many) 관계 표기법 - 이건 표현 불가능 해서 그냥 손으로 그리자
//	포함한다
//	주문	->|--------------------|<-	제품
//						포함된다					
//		
//	다. 관계선택사양
//	
//	포함한다
//	주문목록	->o--------------------|-	목록
//						포함된다
//	하나의 주문목록에는 한 개의 목록을 항상 포함하고
//	한 목록은 여러 개의 주문 목록에 의해 포함될 수 있다
						
//	관계 읽는 방법
//	
//	데이터 모델을 읽는 방법은 먼저 관계에 참여하는 기준 엔티티를 하나 또는
//	각(each)으로 읽고 대상 엔티티의 개수(하나, 하나이상)을 읽고
//	관계선택사양과 관계명을 읽도록 한다
//	
//	- 기준 엔티티를 한 개(one), 또는 각(each)으로 읽는다
//	- 대상 엔티티의 관계참여도 즉 개수(하나, 하나이상)을 읽는다
//	- 관게선택사양과 관계명을 읽는다
	
	
	
	
}
