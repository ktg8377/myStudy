
public class DatabaseBasic1 {

//	오라클 db 접속 키워드
//	비번 잃어버렸을 때 사용함 as
//	sqlplus system/temp as sysdba
//	sqlplus 계정/암호 as 접근레벨?
	
//	데이터 모델링의 이해
//	
//	모델이라고 하는 것은 모형, 축소형의 의미로서 사람이 살아가면서
//	나타날 수 있는 다양한 현상에 대해서 일정한 표기법에 의해 표현해 놓은
//	모형이라고 할 수 있다
//	
//	이것은 어떤 목적을 달성하기 위해 커뮤니케이션의 효율성을 극대화한
//	고급화된 표현방법으로 설명될 수 있다
//	
//	사람이 살아가면서 나타날 수 있는 다양한 현상은
//	사람, 사물, 개념 등에 의해 발생된다고 할 수 있으며
//	모델링은 이것을 표기법에 의해 규칙을 가지고 표기하는 것 자체를 의미한다
//	
//	즉 모델을 만들어가는 일 자체를 모델링으로 정의할 수 있다
//	
//	현실세계  		-------> 	모델
//				추상화
//				단순화
//				명확화
//	복잡한 현실세계를 일정한 표기법에 의해 표현하는 일
//	
//	복잡한 현실세계를 단순화시켜 표현하는 것
//	
//	@모델링의 특징
//	추상화: 현실세계를 일정한 형식에 맞추어 표현을 한다는 의미
//	
//	단순화: 복잡한 현실세계를 약속된 규약에 의해 제한된 표기법이나
//	언어로 표현하여 쉽게 이해할 수 있도록 하는 개념
//	
//	명확화: 누구나 이해하기 쉽게 하기 위해 대상에 대한 애매모호함을 제거하고
//	정확하게 현상을 기술하는 것을 의미
//	
//	@모델링의 세 가지 관점
//	**데이터 관점: 업무가 어떤 데이터와 관련이 있는지 또는 데이터 간의 관계는 무엇인지에
//	대해서 모델링 하는 방법(이 관점에서 배운다)
//	프로세스 관점: 업무가 실제하고 있는 일은 무엇인지 또는 무엇을 해야 하는지를
//	모델링하는 방법
//	등	
	
//	@데이터 모델링의 정의
//	정보시스템을 구축하기 위해, 해당 업무에 어떤 데이터가존재하는지
//	또는 업무가 필요로 하는 정보는 무엇인지를 분석하는 방법
//	
//	기업 업무에 대한 종합적인 이해를 바탕으로 데이터에 존재하는 업무 규칙에 대하여
//	참 또는 거짓을 판별할 수 있는 사실을 데이터에 접근하는 방법, 사람, 전산화와는
//	별개의 관점에서 이를 명확하게 표현하는 추상화 기법
//	
//	요약하면
//	데이터베이스를 구축하기 위한 분석/설계의 과정
//	
//	@데이터 모델링의 유의점
//	1. 중복(duplication)
//	데이터 모델은 같은 데이터를 사용하는 사람, 시간, 그리고 장소를 파악하는데
//	도움을 준다 이러한 지식 응용은 데이터베이스가 여러 장소에 같은 정보를
//	저장하는 잘못을 하지 않도록 한다
//	2. 비유연성(Inflexibility)
//	데이터 모델을 어떻게 설계했느냐에 따라 사소한 업무변화에도 데이터 모델이
//	수시로 변경됨으로써 유지보수의 어려움을 가중시킬 수 있다. 데이터의 정의를
//	데이터의 사용 프로세스와 분리함으로써 데이터 모델링은 데이터 혹은 프로세스의
//	작은 변화가 애플리케이션과 데이터베이스에 중대한 변화를 일으킬 수 있는
//	가능성을 줄인다
//	3. 비일관성(Inconsistency)
//	데이터의 중복이 없더라도 비일관성은 발생한다. 예를 들어 신용 상태에 대한
//	갱신 없이 고객의 납부 이력 정보를 갱신하는 것이다. 개발자가 다른 데이터와 모순된다는
//	고려 없이 일련의 데이터를 수정할 수 있기 때문이다. 데이터 모델링을 할 때
//	데이터와 데이터간 상호 연관 관계에 대한 명확한 정의는 이러한 위험을 사전에
//	예방할 수 있도록 해준다
//	스페이스, 위와 아래
//	@데이터 모델링의 3단계
//	스페이스 4 = 탭 1
//	현실세계							개념세계
//	개체			----------->		개념적 구조
//				개념적 데이터 모델링
//	↑↓			물리(컴퓨터)세계			↑↓			논리적 데이터 모델링
//	저장			<-----------		논리적 구조
//	데이터베이스	물리적 데이터 모델링
//	
//	데이터 모델링			내용										수준
//	개념적 데이터 모델링 		추상화 수준이 높고 업무중심적이고 포괄적인 수준의		추상적
//	(conceptual)		모델링 진행
//	논리적 데이터 모델링		시스템으로 구축하고 자하는 업무에 대해 Key, 속성		↑↓
//	(logical)			관계 등을 정확하게 표현, 재사용성이 높음
//	물리적 데이터 모델링		실제로 데이터 베이스에 이식할 수 있도록 성능, 저장등
//	(physical)			물리적인 성격을 고려하여 설계					구체적
	
//	프로젝트 생명주기(Life Cycle)
//	
//	분석 -> 설계 -> 개발 -> 테스트 -> 이행
//	(이걸 대충 무한 반복)
//	
//	사상(Mapping)
//	상호 독립적인 개념을 연결시켜주는 다리를 뜻한다
//	
//	@데이터 모델링의 중요한 세 가지 개념
//	1) 업무가 관여하는 어떤 것(Things)			명사
//	2) 어떤 것이 가지는 성격(Attributes)		인스턴스 변수
//	3) 업무가 관여하는 어떤 것 간의 관계(RelationShips)	관계
//	
//				용어의 구분정의
//	개념					집합개념	
//	어떤 것				엔티티(Entity)
//	어떤 것간의 관계			관계(RelationShip)
//	어떤 것의 성격			속성(Attribute)
//	
//	이주일과 심순애가 존재하고 둘 사이는 서로 사랑하는 연인사이다.
//	이주일은 키가 180cm에 성격은 친절하고심순애는 키가 165cm에
//	세심하며 활달한 성격을 가지고있다
//	
//	어떤것: 이주일, 심순애
//	관계: 사랑하는 연인사이
//	성격: 키가 180cm에 성격은 친절, 키가 165cm에 세심하며 활달한 성격
	
//	표기법
//	IE/Crow's Foot 표기법
//	까마귀발 모양의 표기법으로 가장 많이 사용함
//	
//	우린 대충 IE표기법으로 모델링 한다
//	
//	ERD(Entity Relationship Diagram) 표기법
//	작업순서
//	엔티티를 그린다 -> 엔티티를 적절하게 배치한다 -> 엔티티간의 관계를 설정한다
//	-> 관계명을 기술한다 -> 관계의 참여도를 기술한다 -> 관계의 필수여부를 기술한다
	
	
}
